{"ast":null,"code":"import { TurnOrder, Client, Server, Game } from \"boardgame.io/core\";\nimport react from 'react';\n// function clearElement(elementID) {\n//     document.getElementById(elementID).innerHTML = \"\";\n// }\n//\n// function hideRollScreen() {\n//     console.log(\"hideRollScreen function\");\n//     document.getElementById(\"rollVal\").style.visibility = \"hidden\";\n//     document.getElementById(\"rollVal\").setAttribute(\"disabled\", \"True\");\n//\n//     document.getElementById(\"proceedButton\").style.visibility = \"hidden\";\n//     document.getElementById(\"proceedButton\").setAttribute(\"disabled\", \"True\");\n// }\n// function showRollScreen() {\n//     console.log(\"showRollScreen function\");\n//     // Show the dice and roll button\n//     document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.visibility = \"visible\";\n//     document.getElementById(\"A_pair_of_strange_dice_lay_bef\").removeAttribute(\"disabled\");\n//\n//     document.getElementById(\"DiceButton\").style.visibility = \"visible\";\n//     document.getElementById(\"DiceButton\").removeAttribute(\"disabled\");\n//\n//     // Hide the roll result and event buttons\n//     document.getElementById(\"temp\").style.display = \"none\";\n// }\n\n// function showEndTurnButton(G, ctx) {\n//     let endTurnBtn = document.createElement(\"button\");\n//     endTurnBtn.setAttribute(\"class\", \"answerButton\");\n//     endTurnBtn.innerHTML = \"End Turn\";\n//     endTurnBtn.id = \"endTurnBtn\";\n//     let btnContainer = document.createElement(\"btnContainer\");\n//     if (btnContainer != null) {\n//         btnContainer.appendChild(endTurnBtn);\n//     }\n//     endTurnBtn.addEventListener(\"click\", () => {\n//         // clearElement(\"eventScreen\");\n//         // ctx.events.endTurn();\n//         // showRollScreen({G, ctx});\n//     });\n// }\n\n// function getEvent(event, G, ctx, events) {\n//     switch (event) {\n//         case \"randomNumberGuessing\":\n//             console.log(\"switch case function randomNumberGuessing\");\n//\n//             const eventScreen = document.getElementById(\"eventScreen\");\n//\n//             hideRollScreen();\n//\n//             // Create container div element\n//             const container = document.createElement(\"div\");\n//             container.style.display = \"flex\";\n//             container.style.flexDirection = \"column\";\n//             container.style.alignItems = \"center\";\n//             container.style.height = \"50%\"; // reduce height\n//             container.style.width = \"100%\";\n//             container.style.bottom = \"40%\"; // move container to bottom\n//             container.style.position = \"absolute\";\n//\n//             const btnContainer = document.createElement(\"div\");\n//             btnContainer.style.display = \"flex\";\n//             btnContainer.style.justifyContent = \"center\";\n//             btnContainer.style.alignItems = \"center\";\n//             btnContainer.style.flexDirection = \"row\";\n//             btnContainer.style.gap = \"10px\";\n//             btnContainer.style.position = \"absolute\";\n//             btnContainer.style.bottom = \"0\"; // move buttons down\n//             btnContainer.style.width = \"100%\";\n//\n//             let eventText = document.createElement(\"span\");\n//             eventText.innerHTML = \"A mysterious raggedy wizard appears before you and asks the question... \\\"What is the airspeed velocity of an unladen swallow?\\\"\";\n//             eventText.setAttribute(\"class\", \"inGameText\");\n//             eventText.style.width = \"60%\";\n//\n//             // let eventImg = document.createElement(\"img\");\n//             // let promptToAnswer = document.createElement(\"span\");\n//             // promptToAnswer.setAttribute(\"class\", \"questionText\");\n//             // promptToAnswer.innerHTML = \"Choose your answer:\";\n//\n//             // eventImg.id = \"montyPython\";\n//             // eventImg.src = \"explosion.jpeg\";\n//\n//             let ans1 = document.createElement(\"button\");\n//             let ans2 = document.createElement(\"button\");\n//             let ans3 = document.createElement(\"button\");\n//\n//             ans1.setAttribute(\"class\", \"answerButton\");\n//             ans2.setAttribute(\"class\", \"answerButton\");\n//             ans3.setAttribute(\"class\", \"answerButton\");\n//\n//             ans1.innerHTML = \"What do you mean? African or European swallow?\";\n//             ans2.innerHTML = \"I don't know that!\";\n//             ans3.innerHTML = \"What is an unladen swallow?\";\n//\n//             // Append child elements to container div element\n//             container.appendChild(eventText);\n//             // container.appendChild(eventImg);\n//             // container.appendChild(promptToAnswer);\n//             btnContainer.appendChild(ans1);\n//             btnContainer.appendChild(ans2);\n//             btnContainer.appendChild(ans3);\n//             container.appendChild(btnContainer);\n//\n//             // Append container div element to eventScreen\n//             eventScreen.appendChild(container);\n//\n//             ans1.addEventListener(\"click\", function() {\n//                 let resultText = document.createElement(\"div\");\n//                 btnContainer.removeChild(ans1);\n//                 btnContainer.removeChild(ans2);\n//                 btnContainer.removeChild(ans3);\n//                 // showEndTurnButton({ G, ctx });\n//\n//                 let endTurnBtn = document.createElement(\"endTurnBtn\");\n//                 endTurnBtn.setAttribute(\"class\", \"answerButton\");\n//                 btnContainer.appendChild(endTurnBtn);\n//                 endTurnBtn.style.display = \"flex\";\n//                 endTurnBtn.style.justifyContent = \"center\";\n//                 endTurnBtn.style.alignItems = \"center\";\n//\n//                 endTurnBtn.innerHTML = \"End Turn\";\n//                 eventText.innerHTML = \"The wizard is dumbfound and spontaneously combusts into 100 coins which are \" +\n//                     \"added to your wallet!\";\n//\n//                 endTurnBtn.addEventListener(\"click\", () => {\n//                     eventText.innerHTML = \"\";\n//                     btnContainer.removeChild(endTurnBtn);\n//                     console.log(\"This is events: \", events);\n//                     // console.log(\"Logged event endturn function function: \", events);\n//                     // turnFlag = true;\n//                     events.endTurn();\n//                     console.log(\"This is current Player from getEvent function\", ctx.currentPlayer)\n//                     showRollScreen();\n//\n//                 });\n//             });\n//\n//             break;\n//     }\n// }\nexport const UpwardsMobility = {\n  setup: () => ({\n    players: {\n      0: {\n        position: 0,\n        items: []\n      },\n      1: {\n        position: 0,\n        items: []\n      }\n    },\n    board: {\n      0: {\n        event: 'start',\n        currency: 0\n      },\n      1: {\n        event: 'advance',\n        currency: 2\n      },\n      2: {\n        event: 'advance',\n        currency: 2\n      },\n      3: {\n        event: 'reverse',\n        currency: -1\n      },\n      4: {\n        event: 'advance',\n        currency: 3\n      },\n      5: {\n        event: 'randomNumberGuessing',\n        currency: 0\n      },\n      6: {\n        event: 'advance',\n        currency: 1\n      },\n      7: {\n        event: 'none',\n        currency: 0\n      },\n      8: {\n        event: 'none',\n        currency: 0\n      },\n      9: {\n        event: 'reverse',\n        currency: -2\n      },\n      10: {\n        event: 'none',\n        currency: 0\n      },\n      11: {\n        event: 'none',\n        currency: 0\n      },\n      12: {\n        event: 'advance',\n        currency: 2\n      },\n      13: {\n        event: 'advance',\n        currency: 2\n      },\n      14: {\n        event: 'reverse',\n        currency: -1\n      },\n      15: {\n        event: 'advance',\n        currency: 3\n      },\n      16: {\n        event: 'advance',\n        currency: -2\n      },\n      17: {\n        event: 'advance',\n        currency: 1\n      },\n      18: {\n        event: 'advance',\n        currency: 2\n      },\n      19: {\n        event: 'none',\n        currency: 0\n      },\n      20: {\n        event: 'reverse',\n        currency: -2\n      },\n      21: {\n        event: 'advance',\n        currency: 2\n      },\n      22: {\n        event: 'reverse',\n        currency: -2\n      },\n      23: {\n        event: 'reverse',\n        currency: -2\n      },\n      24: {\n        event: 'win',\n        currency: 0\n      }\n    }\n    // ctx: {\n    //     currentPlayer: \"0\",\n    //     phase: 0,\n    //     numPlayers: 2,\n    // },\n  }),\n\n  // movesPerTurn: 1,\n  turn: {\n    order: TurnOrder.ONCE\n    // moveLimit: 1,\n    // minMoves: 1,\n    // maxMoves: 1,\n  },\n\n  // Define the moves for rolling the dice and updating the game state.\n  moves: {\n    tempRoll: _ref => {\n      let {\n        G,\n        ctx,\n        events\n      } = _ref;\n      turnFlag = false;\n      const die1 = Math.floor(Math.random() * 6) + 1;\n      const die2 = Math.floor(Math.random() * 6) + 1;\n      // let moveDist = die1 + die2;\n      // G.players[ctx.currentPlayer].position += moveDist;\n      let moveDist = 5;\n      if (G.players[ctx.currentPlayer].position >= 25) {\n        ctx.events.endGame({\n          winner: ctx.currentPlayer\n        });\n      }\n      const eventCell = G.board[G.players[ctx.currentPlayer].position + moveDist];\n      let event = eventCell.event;\n      switch (eventCell.event) {\n        case 'advance':\n          moveDist += eventCell.currency;\n          break;\n        case 'reverse':\n          moveDist -= eventCell.currency;\n          break;\n        case 'win':\n          ctx.events.endGame({\n            winner: ctx.currentPlayer\n          });\n          break;\n      }\n      G.players[ctx.currentPlayer].position += moveDist;\n\n      // document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.visibility = \"hidden\";\n      // document.getElementById(\"A_pair_of_strange_dice_lay_bef\").setAttribute(\"disabled\", \"True\");\n      //\n      // document.getElementById(\"DiceButton\").style.visibility = \"hidden\";\n      // document.getElementById(\"DiceButton\").setAttribute(\"disabled\", \"True\");\n      //\n      // document.getElementById(\"NoPath_-_Copy_8\").style.visibility = \"hidden\";\n      // document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.top = \"20%\";\n      //\n      // let showProceedButton = document.createElement(`button`);\n      // showProceedButton.setAttribute(\"class\", \"inGameButton\");\n      // showProceedButton.setAttribute(\"id\", \"proceedButton\");\n      // showProceedButton.addEventListener(\"click\", function() {\n      //     getEvent(event, G, ctx, events);\n      // });\n      // showProceedButton.innerHTML = \"Show Event\";\n      //\n      // // let showPassEventButton = document.createElement(`button`);\n      // // showProceedButton.setAttribute(\"class\", \"inGameButton\");\n      // // showProceedButton.setAttribute(\"id\", \"proceedButton\");\n      // // showProceedButton.addEventListener(\"click\", function() {\n      // //     // ctx.events.endTurn();\n      // //     // ctx.events.endPhase();\n      // // });\n      // // showProceedButton.innerHTML = \"Pass Event\";\n      //\n      // let showRollVal = document.createElement(\"span\");\n      // showRollVal.setAttribute(\"class\", \"inGameText\");\n      // showRollVal.setAttribute(\"id\", \"rollVal\");\n      // // showRollVal.innerHTML = \"Player 1 rolled \" + moveDist + \"!\"\n      // showRollVal.innerHTML = \"Player \" + (ctx.currentPlayer) + \" rolled \" + moveDist + \" with an added currency count of \" + eventCell.currency + \" from event cell: \" + eventCell.event + \"resulting in a total move space of: \" + (moveDist + eventCell.currency) + \" !\";\n      //\n      // let testDiv = document.createElement(\"div\");\n      // testDiv.setAttribute(\"class\", \"tempDiv\");\n      // testDiv.setAttribute(\"id\", \"temp\");\n      //\n      // testDiv.appendChild(showRollVal);\n      // testDiv.appendChild(showProceedButton);\n      // // testDiv.appendChild(showPassEventButton);\n      // document.getElementById(\"eventScreen\").append(testDiv);\n      //\n      // showProceedButton.style.position = \"absolute\";\n      // showProceedButton.style.left = \"50%\";\n      // showProceedButton.style.top = \"50%\";\n      // showProceedButton.style.transform = \"translate(-50%, -50%)\";\n      // showProceedButton.style.width = \"200px\";\n      //\n      // // if (turnFlag == true) {\n      // //     console.log(\"hello from turn flag\")\n      // //     events.endTurn();\n      // // }\n      //\n      // // showPassEventButton.style.position = \"absolute\";\n      // // showPassEventButton.style.left = \"50%\";\n      // // showPassEventButton.style.top = \"50%\";\n      // // showPassEventButton.style.transform = \"translate(-50%, -50%)\";\n      // // showPassEventButton.style.width = \"200px\";\n      //\n      //   // events.endTurn();\n    },\n\n    endTurn(_ref2) {\n      let {\n        G,\n        ctx,\n        events\n      } = _ref2;\n      events.endTurn();\n    }\n  }\n};","map":{"version":3,"names":["TurnOrder","Client","Server","Game","react","UpwardsMobility","setup","players","position","items","board","event","currency","turn","order","ONCE","moves","tempRoll","_ref","G","ctx","events","turnFlag","die1","Math","floor","random","die2","moveDist","currentPlayer","endGame","winner","eventCell","endTurn","_ref2"],"sources":["/Users/aaron/Desktop/School/488_CMPSC/GUI-based-Web-Game-with-Cloud-Native-Infrastructure-Backend/upwardmobility/src/Game.js"],"sourcesContent":["import { TurnOrder, Client, Server, Game } from \"boardgame.io/core\";\nimport react from 'react';\n// function clearElement(elementID) {\n//     document.getElementById(elementID).innerHTML = \"\";\n// }\n//\n// function hideRollScreen() {\n//     console.log(\"hideRollScreen function\");\n//     document.getElementById(\"rollVal\").style.visibility = \"hidden\";\n//     document.getElementById(\"rollVal\").setAttribute(\"disabled\", \"True\");\n//\n//     document.getElementById(\"proceedButton\").style.visibility = \"hidden\";\n//     document.getElementById(\"proceedButton\").setAttribute(\"disabled\", \"True\");\n// }\n// function showRollScreen() {\n//     console.log(\"showRollScreen function\");\n//     // Show the dice and roll button\n//     document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.visibility = \"visible\";\n//     document.getElementById(\"A_pair_of_strange_dice_lay_bef\").removeAttribute(\"disabled\");\n//\n//     document.getElementById(\"DiceButton\").style.visibility = \"visible\";\n//     document.getElementById(\"DiceButton\").removeAttribute(\"disabled\");\n//\n//     // Hide the roll result and event buttons\n//     document.getElementById(\"temp\").style.display = \"none\";\n// }\n\n\n// function showEndTurnButton(G, ctx) {\n//     let endTurnBtn = document.createElement(\"button\");\n//     endTurnBtn.setAttribute(\"class\", \"answerButton\");\n//     endTurnBtn.innerHTML = \"End Turn\";\n//     endTurnBtn.id = \"endTurnBtn\";\n//     let btnContainer = document.createElement(\"btnContainer\");\n//     if (btnContainer != null) {\n//         btnContainer.appendChild(endTurnBtn);\n//     }\n//     endTurnBtn.addEventListener(\"click\", () => {\n//         // clearElement(\"eventScreen\");\n//         // ctx.events.endTurn();\n//         // showRollScreen({G, ctx});\n//     });\n// }\n\n// function getEvent(event, G, ctx, events) {\n//     switch (event) {\n//         case \"randomNumberGuessing\":\n//             console.log(\"switch case function randomNumberGuessing\");\n//\n//             const eventScreen = document.getElementById(\"eventScreen\");\n//\n//             hideRollScreen();\n//\n//             // Create container div element\n//             const container = document.createElement(\"div\");\n//             container.style.display = \"flex\";\n//             container.style.flexDirection = \"column\";\n//             container.style.alignItems = \"center\";\n//             container.style.height = \"50%\"; // reduce height\n//             container.style.width = \"100%\";\n//             container.style.bottom = \"40%\"; // move container to bottom\n//             container.style.position = \"absolute\";\n//\n//             const btnContainer = document.createElement(\"div\");\n//             btnContainer.style.display = \"flex\";\n//             btnContainer.style.justifyContent = \"center\";\n//             btnContainer.style.alignItems = \"center\";\n//             btnContainer.style.flexDirection = \"row\";\n//             btnContainer.style.gap = \"10px\";\n//             btnContainer.style.position = \"absolute\";\n//             btnContainer.style.bottom = \"0\"; // move buttons down\n//             btnContainer.style.width = \"100%\";\n//\n//             let eventText = document.createElement(\"span\");\n//             eventText.innerHTML = \"A mysterious raggedy wizard appears before you and asks the question... \\\"What is the airspeed velocity of an unladen swallow?\\\"\";\n//             eventText.setAttribute(\"class\", \"inGameText\");\n//             eventText.style.width = \"60%\";\n//\n//             // let eventImg = document.createElement(\"img\");\n//             // let promptToAnswer = document.createElement(\"span\");\n//             // promptToAnswer.setAttribute(\"class\", \"questionText\");\n//             // promptToAnswer.innerHTML = \"Choose your answer:\";\n//\n//             // eventImg.id = \"montyPython\";\n//             // eventImg.src = \"explosion.jpeg\";\n//\n//             let ans1 = document.createElement(\"button\");\n//             let ans2 = document.createElement(\"button\");\n//             let ans3 = document.createElement(\"button\");\n//\n//             ans1.setAttribute(\"class\", \"answerButton\");\n//             ans2.setAttribute(\"class\", \"answerButton\");\n//             ans3.setAttribute(\"class\", \"answerButton\");\n//\n//             ans1.innerHTML = \"What do you mean? African or European swallow?\";\n//             ans2.innerHTML = \"I don't know that!\";\n//             ans3.innerHTML = \"What is an unladen swallow?\";\n//\n//             // Append child elements to container div element\n//             container.appendChild(eventText);\n//             // container.appendChild(eventImg);\n//             // container.appendChild(promptToAnswer);\n//             btnContainer.appendChild(ans1);\n//             btnContainer.appendChild(ans2);\n//             btnContainer.appendChild(ans3);\n//             container.appendChild(btnContainer);\n//\n//             // Append container div element to eventScreen\n//             eventScreen.appendChild(container);\n//\n//             ans1.addEventListener(\"click\", function() {\n//                 let resultText = document.createElement(\"div\");\n//                 btnContainer.removeChild(ans1);\n//                 btnContainer.removeChild(ans2);\n//                 btnContainer.removeChild(ans3);\n//                 // showEndTurnButton({ G, ctx });\n//\n//                 let endTurnBtn = document.createElement(\"endTurnBtn\");\n//                 endTurnBtn.setAttribute(\"class\", \"answerButton\");\n//                 btnContainer.appendChild(endTurnBtn);\n//                 endTurnBtn.style.display = \"flex\";\n//                 endTurnBtn.style.justifyContent = \"center\";\n//                 endTurnBtn.style.alignItems = \"center\";\n//\n//                 endTurnBtn.innerHTML = \"End Turn\";\n//                 eventText.innerHTML = \"The wizard is dumbfound and spontaneously combusts into 100 coins which are \" +\n//                     \"added to your wallet!\";\n//\n//                 endTurnBtn.addEventListener(\"click\", () => {\n//                     eventText.innerHTML = \"\";\n//                     btnContainer.removeChild(endTurnBtn);\n//                     console.log(\"This is events: \", events);\n//                     // console.log(\"Logged event endturn function function: \", events);\n//                     // turnFlag = true;\n//                     events.endTurn();\n//                     console.log(\"This is current Player from getEvent function\", ctx.currentPlayer)\n//                     showRollScreen();\n//\n//                 });\n//             });\n//\n//             break;\n//     }\n// }\nexport const UpwardsMobility = {\n  setup: () => ({\n    players: {\n      0: {\n        position: 0,\n        items: [],\n      },\n      1: {\n        position: 0,\n        items: [],\n      }\n    },\n    board: {\n        0: { event: 'start',    currency: 0 },\n        1: { event: 'advance',  currency: 2 },\n        2: { event: 'advance',  currency: 2 },\n        3: { event: 'reverse',  currency: -1 },\n        4: { event: 'advance',  currency: 3 },\n        5: { event: 'randomNumberGuessing',  currency: 0 },\n        6: { event: 'advance',  currency: 1 },\n        7: { event: 'none',     currency: 0 },\n        8: { event: 'none',     currency: 0 },\n        9: { event: 'reverse',  currency: -2 },\n        10: { event: 'none',    currency: 0 },\n        11: { event: 'none',    currency: 0 },\n        12: { event: 'advance', currency: 2 },\n        13: { event: 'advance', currency: 2 },\n        14: { event: 'reverse', currency: -1 },\n        15: { event: 'advance', currency: 3 },\n        16: { event: 'advance', currency: -2 },\n        17: { event: 'advance', currency: 1 },\n        18: { event: 'advance', currency: 2 },\n        19: { event: 'none',    currency: 0 },\n        20: { event: 'reverse', currency: -2 },\n        21: { event: 'advance', currency: 2 },\n        22: { event: 'reverse', currency: -2 },\n        23: { event: 'reverse', currency: -2 },\n        24: { event: 'win', currency: 0 },\n    },\n      // ctx: {\n      //     currentPlayer: \"0\",\n      //     phase: 0,\n      //     numPlayers: 2,\n      // },\n  }),\n    // movesPerTurn: 1,\n    turn: {\n        order: TurnOrder.ONCE,\n        // moveLimit: 1,\n        // minMoves: 1,\n        // maxMoves: 1,\n    },\n\n    // Define the moves for rolling the dice and updating the game state.\n    moves: {\n      tempRoll: ({G ,ctx, events}) => {\n\n          turnFlag = false;\n\n          const die1 = Math.floor(Math.random() * 6) + 1;\n        const die2 = Math.floor(Math.random() * 6) + 1;\n        // let moveDist = die1 + die2;\n        // G.players[ctx.currentPlayer].position += moveDist;\n        let moveDist = 5;\n        if (G.players[ctx.currentPlayer].position >= 25) {\n            ctx.events.endGame({ winner: ctx.currentPlayer });\n        }\n        const eventCell = G.board[G.players[ctx.currentPlayer].position + moveDist];\n\n        let event = eventCell.event;\n\n        switch (eventCell.event) {\n            case 'advance':\n                moveDist += eventCell.currency;\n                break;\n            case 'reverse':\n                moveDist -= eventCell.currency;\n                break;\n            case 'win':\n                ctx.events.endGame({ winner: ctx.currentPlayer });\n                break;\n        }\n\n        G.players[ctx.currentPlayer].position += moveDist;\n\n        // document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.visibility = \"hidden\";\n        // document.getElementById(\"A_pair_of_strange_dice_lay_bef\").setAttribute(\"disabled\", \"True\");\n        //\n        // document.getElementById(\"DiceButton\").style.visibility = \"hidden\";\n        // document.getElementById(\"DiceButton\").setAttribute(\"disabled\", \"True\");\n        //\n        // document.getElementById(\"NoPath_-_Copy_8\").style.visibility = \"hidden\";\n        // document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.top = \"20%\";\n        //\n        // let showProceedButton = document.createElement(`button`);\n        // showProceedButton.setAttribute(\"class\", \"inGameButton\");\n        // showProceedButton.setAttribute(\"id\", \"proceedButton\");\n        // showProceedButton.addEventListener(\"click\", function() {\n        //     getEvent(event, G, ctx, events);\n        // });\n        // showProceedButton.innerHTML = \"Show Event\";\n        //\n        // // let showPassEventButton = document.createElement(`button`);\n        // // showProceedButton.setAttribute(\"class\", \"inGameButton\");\n        // // showProceedButton.setAttribute(\"id\", \"proceedButton\");\n        // // showProceedButton.addEventListener(\"click\", function() {\n        // //     // ctx.events.endTurn();\n        // //     // ctx.events.endPhase();\n        // // });\n        // // showProceedButton.innerHTML = \"Pass Event\";\n        //\n        // let showRollVal = document.createElement(\"span\");\n        // showRollVal.setAttribute(\"class\", \"inGameText\");\n        // showRollVal.setAttribute(\"id\", \"rollVal\");\n        // // showRollVal.innerHTML = \"Player 1 rolled \" + moveDist + \"!\"\n        // showRollVal.innerHTML = \"Player \" + (ctx.currentPlayer) + \" rolled \" + moveDist + \" with an added currency count of \" + eventCell.currency + \" from event cell: \" + eventCell.event + \"resulting in a total move space of: \" + (moveDist + eventCell.currency) + \" !\";\n        //\n        // let testDiv = document.createElement(\"div\");\n        // testDiv.setAttribute(\"class\", \"tempDiv\");\n        // testDiv.setAttribute(\"id\", \"temp\");\n        //\n        // testDiv.appendChild(showRollVal);\n        // testDiv.appendChild(showProceedButton);\n        // // testDiv.appendChild(showPassEventButton);\n        // document.getElementById(\"eventScreen\").append(testDiv);\n        //\n        // showProceedButton.style.position = \"absolute\";\n        // showProceedButton.style.left = \"50%\";\n        // showProceedButton.style.top = \"50%\";\n        // showProceedButton.style.transform = \"translate(-50%, -50%)\";\n        // showProceedButton.style.width = \"200px\";\n        //\n        // // if (turnFlag == true) {\n        // //     console.log(\"hello from turn flag\")\n        // //     events.endTurn();\n        // // }\n        //\n        // // showPassEventButton.style.position = \"absolute\";\n        // // showPassEventButton.style.left = \"50%\";\n        // // showPassEventButton.style.top = \"50%\";\n        // // showPassEventButton.style.transform = \"translate(-50%, -50%)\";\n        // // showPassEventButton.style.width = \"200px\";\n        //\n        //   // events.endTurn();\n\n        },\n\n        endTurn({G, ctx, events}) {\n            events.endTurn();\n        }\n\n    },\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}