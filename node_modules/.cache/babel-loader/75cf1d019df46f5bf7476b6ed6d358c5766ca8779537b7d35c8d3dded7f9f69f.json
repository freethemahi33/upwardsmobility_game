{"ast":null,"code":"export { C as ActivePlayers, G as GameMethod, n as INVALID_MOVE, S as Stage, T as TurnOrder } from './turn-order-8cc4909b.js';\nimport 'immer';\nimport './plugin-random-087f861e.js';\nimport 'lodash.isplainobject';\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\n/**\r\n * PlayerView reducers.\r\n */\nconst PlayerView = {\n  /**\r\n   * STRIP_SECRETS\r\n   *\r\n   * Reducer which removes a key named `secret` and\r\n   * removes all the keys in `players`, except for the one\r\n   * corresponding to the current playerID.\r\n   */\n  STRIP_SECRETS: _ref => {\n    let {\n      G,\n      playerID\n    } = _ref;\n    const r = {\n      ...G\n    };\n    if (r.secret !== undefined) {\n      delete r.secret;\n    }\n    if (r.players) {\n      r.players = playerID ? {\n        [playerID]: r.players[playerID]\n      } : {};\n    }\n    return r;\n  }\n};\nexport { PlayerView };","map":{"version":3,"names":["C","ActivePlayers","G","GameMethod","n","INVALID_MOVE","S","Stage","T","TurnOrder","PlayerView","STRIP_SECRETS","_ref","playerID","r","secret","undefined","players"],"sources":["/Users/aaron/Desktop/School/488_CMPSC/GUI-based-Web-Game-with-Cloud-Native-Infrastructure-Backend 3-21/upwardmobility/node_modules/boardgame.io/dist/esm/core.js"],"sourcesContent":["export { C as ActivePlayers, G as GameMethod, n as INVALID_MOVE, S as Stage, T as TurnOrder } from './turn-order-8cc4909b.js';\nimport 'immer';\nimport './plugin-random-087f861e.js';\nimport 'lodash.isplainobject';\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * PlayerView reducers.\r\n */\r\nconst PlayerView = {\r\n    /**\r\n     * STRIP_SECRETS\r\n     *\r\n     * Reducer which removes a key named `secret` and\r\n     * removes all the keys in `players`, except for the one\r\n     * corresponding to the current playerID.\r\n     */\r\n    STRIP_SECRETS: ({ G, playerID }) => {\r\n        const r = { ...G };\r\n        if (r.secret !== undefined) {\r\n            delete r.secret;\r\n        }\r\n        if (r.players) {\r\n            r.players = playerID\r\n                ? {\r\n                    [playerID]: r.players[playerID],\r\n                }\r\n                : {};\r\n        }\r\n        return r;\r\n    },\r\n};\n\nexport { PlayerView };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,SAAS,QAAQ,0BAA0B;AAC7H,OAAO,OAAO;AACd,OAAO,6BAA6B;AACpC,OAAO,sBAAsB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACf;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,EAAEC,IAAA,IAAqB;IAAA,IAApB;MAAEV,CAAC;MAAEW;IAAS,CAAC,GAAAD,IAAA;IAC3B,MAAME,CAAC,GAAG;MAAE,GAAGZ;IAAE,CAAC;IAClB,IAAIY,CAAC,CAACC,MAAM,KAAKC,SAAS,EAAE;MACxB,OAAOF,CAAC,CAACC,MAAM;IACnB;IACA,IAAID,CAAC,CAACG,OAAO,EAAE;MACXH,CAAC,CAACG,OAAO,GAAGJ,QAAQ,GACd;QACE,CAACA,QAAQ,GAAGC,CAAC,CAACG,OAAO,CAACJ,QAAQ;MAClC,CAAC,GACC,CAAC,CAAC;IACZ;IACA,OAAOC,CAAC;EACZ;AACJ,CAAC;AAED,SAASJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}