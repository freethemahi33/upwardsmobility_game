{"ast":null,"code":"// Inlined version of Alea from https://github.com/davidbau/seedrandom.\n// Converted to Typescript October 2020.\nclass Alea {\n  constructor(seed) {\n    const mash = Mash();\n    // Apply the seeding algorithm from Baagoe.\n    this.c = 1;\n    this.s0 = mash(' ');\n    this.s1 = mash(' ');\n    this.s2 = mash(' ');\n    this.s0 -= mash(seed);\n    if (this.s0 < 0) {\n      this.s0 += 1;\n    }\n    this.s1 -= mash(seed);\n    if (this.s1 < 0) {\n      this.s1 += 1;\n    }\n    this.s2 -= mash(seed);\n    if (this.s2 < 0) {\n      this.s2 += 1;\n    }\n  }\n  next() {\n    const t = 2091639 * this.s0 + this.c * 2.3283064365386963e-10; // 2^-32\n    this.s0 = this.s1;\n    this.s1 = this.s2;\n    return this.s2 = t - (this.c = Math.trunc(t));\n  }\n}\nfunction Mash() {\n  let n = 0xefc8249d;\n  const mash = function (data) {\n    const str = data.toString();\n    for (let i = 0; i < str.length; i++) {\n      n += str.charCodeAt(i);\n      let h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\nfunction alea(seed, state) {\n  const xg = new Alea(seed);\n  const prng = xg.next.bind(xg);\n  if (state) copy(state, xg);\n  prng.state = () => copy(xg, {});\n  return prng;\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\n/**\r\n * Random\r\n *\r\n * Calls that require a pseudorandom number generator.\r\n * Uses a seed from ctx, and also persists the PRNG\r\n * state in ctx so that moves can stay pure.\r\n */\nclass Random {\n  /**\r\n   * constructor\r\n   * @param {object} ctx - The ctx object to initialize from.\r\n   */\n  constructor(state) {\n    // If we are on the client, the seed is not present.\n    // Just use a temporary seed to execute the move without\n    // crashing it. The move state itself is discarded,\n    // so the actual value doesn't matter.\n    this.state = state || {\n      seed: '0'\n    };\n    this.used = false;\n  }\n  /**\r\n   * Generates a new seed from the current date / time.\r\n   */\n  static seed() {\n    return Date.now().toString(36).slice(-10);\n  }\n  isUsed() {\n    return this.used;\n  }\n  getState() {\n    return this.state;\n  }\n  /**\r\n   * Generate a random number.\r\n   */\n  _random() {\n    this.used = true;\n    const R = this.state;\n    const seed = R.prngstate ? '' : R.seed;\n    const rand = alea(seed, R.prngstate);\n    const number = rand();\n    this.state = {\n      ...R,\n      prngstate: rand.state()\n    };\n    return number;\n  }\n  api() {\n    const random = this._random.bind(this);\n    const SpotValue = {\n      D4: 4,\n      D6: 6,\n      D8: 8,\n      D10: 10,\n      D12: 12,\n      D20: 20\n    };\n    // Generate functions for predefined dice values D4 - D20.\n    const predefined = {};\n    for (const key in SpotValue) {\n      const spotvalue = SpotValue[key];\n      predefined[key] = diceCount => {\n        return diceCount === undefined ? Math.floor(random() * spotvalue) + 1 : Array.from({\n          length: diceCount\n        }).map(() => Math.floor(random() * spotvalue) + 1);\n      };\n    }\n    function Die() {\n      let spotvalue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n      let diceCount = arguments.length > 1 ? arguments[1] : undefined;\n      return diceCount === undefined ? Math.floor(random() * spotvalue) + 1 : Array.from({\n        length: diceCount\n      }).map(() => Math.floor(random() * spotvalue) + 1);\n    }\n    return {\n      /**\r\n       * Similar to Die below, but with fixed spot values.\r\n       * Supports passing a diceCount\r\n       *    if not defined, defaults to 1 and returns the value directly.\r\n       *    if defined, returns an array containing the random dice values.\r\n       *\r\n       * D4: (diceCount) => value\r\n       * D6: (diceCount) => value\r\n       * D8: (diceCount) => value\r\n       * D10: (diceCount) => value\r\n       * D12: (diceCount) => value\r\n       * D20: (diceCount) => value\r\n       */\n      ...predefined,\n      /**\r\n       * Roll a die of specified spot value.\r\n       *\r\n       * @param {number} spotvalue - The die dimension (default: 6).\r\n       * @param {number} diceCount - number of dice to throw.\r\n       *                             if not defined, defaults to 1 and returns the value directly.\r\n       *                             if defined, returns an array containing the random dice values.\r\n       */\n      Die,\n      /**\r\n       * Generate a random number between 0 and 1.\r\n       */\n      Number: () => {\n        return random();\n      },\n      /**\r\n       * Shuffle an array.\r\n       *\r\n       * @param {Array} deck - The array to shuffle. Does not mutate\r\n       *                       the input, but returns the shuffled array.\r\n       */\n      Shuffle: deck => {\n        const clone = [...deck];\n        let sourceIndex = deck.length;\n        let destinationIndex = 0;\n        const shuffled = Array.from({\n          length: sourceIndex\n        });\n        while (sourceIndex) {\n          const randomIndex = Math.trunc(sourceIndex * random());\n          shuffled[destinationIndex++] = clone[randomIndex];\n          clone[randomIndex] = clone[--sourceIndex];\n        }\n        return shuffled;\n      },\n      _private: this\n    };\n  }\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\nconst RandomPlugin = {\n  name: 'random',\n  noClient: _ref => {\n    let {\n      api\n    } = _ref;\n    return api._private.isUsed();\n  },\n  flush: _ref2 => {\n    let {\n      api\n    } = _ref2;\n    return api._private.getState();\n  },\n  api: _ref3 => {\n    let {\n      data\n    } = _ref3;\n    const random = new Random(data);\n    return random.api();\n  },\n  setup: _ref4 => {\n    let {\n      game\n    } = _ref4;\n    let {\n      seed\n    } = game;\n    if (seed === undefined) {\n      seed = Random.seed();\n    }\n    return {\n      seed\n    };\n  },\n  playerView: () => undefined\n};\nexport { RandomPlugin as R, alea as a };","map":{"version":3,"names":["Alea","constructor","seed","mash","Mash","c","s0","s1","s2","next","t","Math","trunc","n","data","str","toString","i","length","charCodeAt","h","copy","f","alea","state","xg","prng","bind","Random","used","Date","now","slice","isUsed","getState","_random","R","prngstate","rand","number","api","random","SpotValue","D4","D6","D8","D10","D12","D20","predefined","key","spotvalue","diceCount","undefined","floor","Array","from","map","Die","arguments","Number","Shuffle","deck","clone","sourceIndex","destinationIndex","shuffled","randomIndex","_private","RandomPlugin","name","noClient","_ref","flush","_ref2","_ref3","setup","_ref4","game","playerView","a"],"sources":["/Users/aaron/Desktop/School/488_CMPSC/GUI-based-Web-Game-with-Cloud-Native-Infrastructure-Backend 3-21/upwardmobility/node_modules/boardgame.io/dist/esm/plugin-random-087f861e.js"],"sourcesContent":["// Inlined version of Alea from https://github.com/davidbau/seedrandom.\r\n// Converted to Typescript October 2020.\r\nclass Alea {\r\n    constructor(seed) {\r\n        const mash = Mash();\r\n        // Apply the seeding algorithm from Baagoe.\r\n        this.c = 1;\r\n        this.s0 = mash(' ');\r\n        this.s1 = mash(' ');\r\n        this.s2 = mash(' ');\r\n        this.s0 -= mash(seed);\r\n        if (this.s0 < 0) {\r\n            this.s0 += 1;\r\n        }\r\n        this.s1 -= mash(seed);\r\n        if (this.s1 < 0) {\r\n            this.s1 += 1;\r\n        }\r\n        this.s2 -= mash(seed);\r\n        if (this.s2 < 0) {\r\n            this.s2 += 1;\r\n        }\r\n    }\r\n    next() {\r\n        const t = 2091639 * this.s0 + this.c * 2.3283064365386963e-10; // 2^-32\r\n        this.s0 = this.s1;\r\n        this.s1 = this.s2;\r\n        return (this.s2 = t - (this.c = Math.trunc(t)));\r\n    }\r\n}\r\nfunction Mash() {\r\n    let n = 0xefc8249d;\r\n    const mash = function (data) {\r\n        const str = data.toString();\r\n        for (let i = 0; i < str.length; i++) {\r\n            n += str.charCodeAt(i);\r\n            let h = 0.02519603282416938 * n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            h *= n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            n += h * 0x100000000; // 2^32\r\n        }\r\n        return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n    };\r\n    return mash;\r\n}\r\nfunction copy(f, t) {\r\n    t.c = f.c;\r\n    t.s0 = f.s0;\r\n    t.s1 = f.s1;\r\n    t.s2 = f.s2;\r\n    return t;\r\n}\r\nfunction alea(seed, state) {\r\n    const xg = new Alea(seed);\r\n    const prng = xg.next.bind(xg);\r\n    if (state)\r\n        copy(state, xg);\r\n    prng.state = () => copy(xg, {});\r\n    return prng;\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Random\r\n *\r\n * Calls that require a pseudorandom number generator.\r\n * Uses a seed from ctx, and also persists the PRNG\r\n * state in ctx so that moves can stay pure.\r\n */\r\nclass Random {\r\n    /**\r\n     * constructor\r\n     * @param {object} ctx - The ctx object to initialize from.\r\n     */\r\n    constructor(state) {\r\n        // If we are on the client, the seed is not present.\r\n        // Just use a temporary seed to execute the move without\r\n        // crashing it. The move state itself is discarded,\r\n        // so the actual value doesn't matter.\r\n        this.state = state || { seed: '0' };\r\n        this.used = false;\r\n    }\r\n    /**\r\n     * Generates a new seed from the current date / time.\r\n     */\r\n    static seed() {\r\n        return Date.now().toString(36).slice(-10);\r\n    }\r\n    isUsed() {\r\n        return this.used;\r\n    }\r\n    getState() {\r\n        return this.state;\r\n    }\r\n    /**\r\n     * Generate a random number.\r\n     */\r\n    _random() {\r\n        this.used = true;\r\n        const R = this.state;\r\n        const seed = R.prngstate ? '' : R.seed;\r\n        const rand = alea(seed, R.prngstate);\r\n        const number = rand();\r\n        this.state = {\r\n            ...R,\r\n            prngstate: rand.state(),\r\n        };\r\n        return number;\r\n    }\r\n    api() {\r\n        const random = this._random.bind(this);\r\n        const SpotValue = {\r\n            D4: 4,\r\n            D6: 6,\r\n            D8: 8,\r\n            D10: 10,\r\n            D12: 12,\r\n            D20: 20,\r\n        };\r\n        // Generate functions for predefined dice values D4 - D20.\r\n        const predefined = {};\r\n        for (const key in SpotValue) {\r\n            const spotvalue = SpotValue[key];\r\n            predefined[key] = (diceCount) => {\r\n                return diceCount === undefined\r\n                    ? Math.floor(random() * spotvalue) + 1\r\n                    : Array.from({ length: diceCount }).map(() => Math.floor(random() * spotvalue) + 1);\r\n            };\r\n        }\r\n        function Die(spotvalue = 6, diceCount) {\r\n            return diceCount === undefined\r\n                ? Math.floor(random() * spotvalue) + 1\r\n                : Array.from({ length: diceCount }).map(() => Math.floor(random() * spotvalue) + 1);\r\n        }\r\n        return {\r\n            /**\r\n             * Similar to Die below, but with fixed spot values.\r\n             * Supports passing a diceCount\r\n             *    if not defined, defaults to 1 and returns the value directly.\r\n             *    if defined, returns an array containing the random dice values.\r\n             *\r\n             * D4: (diceCount) => value\r\n             * D6: (diceCount) => value\r\n             * D8: (diceCount) => value\r\n             * D10: (diceCount) => value\r\n             * D12: (diceCount) => value\r\n             * D20: (diceCount) => value\r\n             */\r\n            ...predefined,\r\n            /**\r\n             * Roll a die of specified spot value.\r\n             *\r\n             * @param {number} spotvalue - The die dimension (default: 6).\r\n             * @param {number} diceCount - number of dice to throw.\r\n             *                             if not defined, defaults to 1 and returns the value directly.\r\n             *                             if defined, returns an array containing the random dice values.\r\n             */\r\n            Die,\r\n            /**\r\n             * Generate a random number between 0 and 1.\r\n             */\r\n            Number: () => {\r\n                return random();\r\n            },\r\n            /**\r\n             * Shuffle an array.\r\n             *\r\n             * @param {Array} deck - The array to shuffle. Does not mutate\r\n             *                       the input, but returns the shuffled array.\r\n             */\r\n            Shuffle: (deck) => {\r\n                const clone = [...deck];\r\n                let sourceIndex = deck.length;\r\n                let destinationIndex = 0;\r\n                const shuffled = Array.from({ length: sourceIndex });\r\n                while (sourceIndex) {\r\n                    const randomIndex = Math.trunc(sourceIndex * random());\r\n                    shuffled[destinationIndex++] = clone[randomIndex];\r\n                    clone[randomIndex] = clone[--sourceIndex];\r\n                }\r\n                return shuffled;\r\n            },\r\n            _private: this,\r\n        };\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nconst RandomPlugin = {\r\n    name: 'random',\r\n    noClient: ({ api }) => {\r\n        return api._private.isUsed();\r\n    },\r\n    flush: ({ api }) => {\r\n        return api._private.getState();\r\n    },\r\n    api: ({ data }) => {\r\n        const random = new Random(data);\r\n        return random.api();\r\n    },\r\n    setup: ({ game }) => {\r\n        let { seed } = game;\r\n        if (seed === undefined) {\r\n            seed = Random.seed();\r\n        }\r\n        return { seed };\r\n    },\r\n    playerView: () => undefined,\r\n};\n\nexport { RandomPlugin as R, alea as a };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}