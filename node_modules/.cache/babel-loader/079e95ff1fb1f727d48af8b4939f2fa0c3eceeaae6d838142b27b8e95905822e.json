{"ast":null,"code":"import { TurnOrder } from \"boardgame.io/core\";\nfunction setEvent() {\n  console.log(\"WORKS\");\n\n  //hides the confirm button from displaying roll amount, also disables and hides the roll amount text\n  document.getElementById(\"confirmButton\").setAttribute(\"disabled\", true);\n  document.getElementById(\"confirmButton\").style.visibility = \"hidden\";\n  document.getElementById(\"rollVal\").style.visibility = \"hidden\";\n\n  //creates the tags for events\n  let eventPic = document.createElement(\"img\");\n  eventPic.setAttribute(\"class\", \"gameImg\");\n  eventPic.src = \"\";\n  let eventDesc = document.createElement(\"span\");\n  eventDesc.setAttribute(\"class\", \"eventDesc\");\n  eventDesc.innerHTML = \"\";\n  let eventButton = document.createElement(\"button\");\n  eventButton.setAttribute(\"class\", \"eventButton\");\n  eventButton.innerHTML = \"Confirm\";\n\n  //clears the temp div\n  document.getElementById(\"temp\").innerHTML = \"\";\n  document.getElementById(\"temp\").append(eventPic);\n  document.getElementById(\"temp\").append(eventDesc);\n  document.getElementById(\"temp\").append(eventButton);\n}\nexport const UpwardsMobility = {\n  setup: () => ({\n    cells: Array(25).fill(null),\n    // Initialize game.\n    upwards: {\n      board: [{\n        event: 'guessNumberEvent'\n      }, {\n        event: 'none'\n      }, {\n        event: 'advance',\n        steps: 2\n      }, {\n        event: 'reverse'\n      }, {\n        event: 'advance',\n        steps: 3\n      }, {\n        event: 'none'\n      }, {\n        event: 'advance',\n        steps: 1\n      }, {\n        event: 'none'\n      }, {\n        event: 'none'\n      }, {\n        event: 'win'\n      }, {\n        event: 'go-to-start',\n        description: 'Go back to the starting cell'\n      }],\n      players: {\n        '0': {\n          position: 0\n        },\n        '1': {\n          position: 0\n        }\n      }\n    }\n  }),\n  // Define the turn order for the game.\n\n  // Define the moves for rolling the dice and updating the game state.\n  moves: {\n    tempRoll: (_ref, id) => {\n      let {\n        G,\n        ctx\n      } = _ref;\n      const die1 = Math.floor(Math.random() * 6) + 1;\n      const die2 = Math.floor(Math.random() * 6) + 1;\n      let moveDist = die1 + die2;\n      document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.visibility = \"hidden\";\n      document.getElementById(\"A_pair_of_strange_dice_lay_bef\").setAttribute(\"disabled\", \"True\");\n      document.getElementById(\"DiceButton\").style.visibility = \"hidden\";\n      document.getElementById(\"DiceButton\").setAttribute(\"disabled\", \"True\");\n      document.getElementById(\"NoPath_-_Copy_8\").style.visibility = \"hidden\";\n      document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.top = \"20%\";\n      let showConfirmButton = document.createElement(`button`);\n      showConfirmButton.setAttribute(\"class\", \"inGameButton\");\n      showConfirmButton.setAttribute(\"id\", \"confirmButton\");\n      showConfirmButton.addEventListener(\"click\", setEvent);\n      showConfirmButton.innerHTML = \"Confirm\";\n      let showRollVal = document.createElement(\"span\");\n      showRollVal.setAttribute(\"class\", \"inGameText\");\n      showRollVal.setAttribute(\"id\", \"rollVal\");\n      showRollVal.innerHTML = \"Player 1 rolled \" + moveDist + \"!\";\n      let testDiv = document.createElement(\"div\");\n      testDiv.setAttribute(\"class\", \"tempDiv\");\n      testDiv.setAttribute(\"id\", \"temp\");\n      testDiv.appendChild(showRollVal);\n      testDiv.appendChild(showConfirmButton);\n      document.getElementById(\"eventScreen\").append(testDiv);\n    },\n    rollDie: (_ref2, id) => {\n      let {\n        G,\n        random,\n        ctx\n      } = _ref2;\n      //rolling dice\n      const die1 = Math.floor(Math.random() * 6) + 1;\n      const die2 = Math.floor(Math.random() * 6) + 1;\n      let moveDist = die1 + die2;\n\n      //moveing players in array\n      G.cells[G.upwards.players[ctx.currentPlayer].position] = null;\n\n      // Check if the player lands on an event cell\n      const eventCell = G.upwards.board[G.upwards.players[ctx.currentPlayer].position + moveDist];\n      if (eventCell.event === 'advance') {\n        moveDist += eventCell.steps;\n      } else if (eventCell.event === 'reverse') {\n        moveDist = -moveDist;\n      } else if (eventCell.event === 'win') {\n        // End the game if a player has won.\n        ctx.events.endGame({\n          winner: ctx.currentPlayer\n        });\n        return;\n      } else if (eventCell.event === 'go-to-start') {\n        moveDist = -G.upwards.players[ctx.currentPlayer].position;\n      }\n      G.upwards.players[ctx.currentPlayer].position += moveDist;\n      G.cells[G.upwards.players[ctx.currentPlayer].position] = id;\n    },\n    guessNumberEvent: (_ref3, id) => {\n      let {\n        G,\n        random,\n        ctx\n      } = _ref3;\n      // Generate a random number between 1 and 10\n      const randomNumber = random.Die(10).roll();\n\n      // player inputs number\n      const playerNumber = prompt(\"Enter a number between 1 and 10\");\n\n      // Compare the player's number to the random number\n      if (playerNumber === null) {\n        // The player clicked Cancel, so do nothing\n        return;\n      } else if (isNaN(playerNumber) || playerNumber < 1 || playerNumber > 10) {\n        // The player entered an invalid number, so end their turn\n        alert(\"Invalid input. Please enter a number between 1 and 10.\");\n        ctx.events.endTurn();\n        return;\n      } else if (playerNumber == randomNumber) {\n        // The player guessed correctly, so advance their position by 2\n        G.upwards.players[ctx.currentPlayer].position += 2;\n      } else {\n        // The player guessed incorrectly, so move their position back by 1\n        G.upwards.players[ctx.currentPlayer].position -= 1;\n      }\n\n      // Update the cell array to reflect the player's new position\n      G.cells[G.upwards.players[ctx.currentPlayer].position] = id;\n\n      // End the player's turn\n      ctx.events.endTurn();\n    }\n  },\n  turn: {\n    order: TurnOrder.ONCE,\n    minMoves: 1,\n    maxMoves: 1\n  }\n};","map":{"version":3,"names":["TurnOrder","setEvent","console","log","document","getElementById","setAttribute","style","visibility","eventPic","createElement","src","eventDesc","innerHTML","eventButton","append","UpwardsMobility","setup","cells","Array","fill","upwards","board","event","steps","description","players","position","moves","tempRoll","_ref","id","G","ctx","die1","Math","floor","random","die2","moveDist","top","showConfirmButton","addEventListener","showRollVal","testDiv","appendChild","rollDie","_ref2","currentPlayer","eventCell","events","endGame","winner","guessNumberEvent","_ref3","randomNumber","Die","roll","playerNumber","prompt","isNaN","alert","endTurn","turn","order","ONCE","minMoves","maxMoves"],"sources":["/Users/aaron/Desktop/School/488_CMPSC/GUI-based-Web-Game-with-Cloud-Native-Infrastructure-Backend/upwardmobility/src/Game.js"],"sourcesContent":["import { TurnOrder } from \"boardgame.io/core\";\n\nfunction setEvent() {\n  console.log(\"WORKS\")\n\n  //hides the confirm button from displaying roll amount, also disables and hides the roll amount text\n  document.getElementById(\"confirmButton\").setAttribute(\"disabled\", true)\n  document.getElementById(\"confirmButton\").style.visibility = \"hidden\"\n  document.getElementById(\"rollVal\").style.visibility = \"hidden\"\n\n  //creates the tags for events\n  let eventPic = document.createElement(\"img\")\n  eventPic.setAttribute(\"class\", \"gameImg\")\n  eventPic.src = \"\"\n\n  let eventDesc = document.createElement(\"span\")\n  eventDesc.setAttribute(\"class\", \"eventDesc\")\n  eventDesc.innerHTML = \"\"\n\n  let eventButton = document.createElement(\"button\")\n  eventButton.setAttribute(\"class\", \"eventButton\")\n  eventButton.innerHTML = \"Confirm\"\n\n  //clears the temp div\n  document.getElementById(\"temp\").innerHTML = \"\"\n  document.getElementById(\"temp\").append(eventPic)\n  document.getElementById(\"temp\").append(eventDesc)\n  document.getElementById(\"temp\").append(eventButton)\n}\n\nexport const UpwardsMobility = {\n  setup: () => ({\n    cells: Array(25).fill(null),\n\n    // Initialize game.\n    upwards: {\n      board: [\n        { event: 'guessNumberEvent' },\n        { event: 'none' },\n        { event: 'advance', steps: 2 },\n        { event: 'reverse' },\n        { event: 'advance', steps: 3 },\n        { event: 'none' },\n        { event: 'advance', steps: 1 },\n        { event: 'none' },\n        { event: 'none' },\n        { event: 'win' },\n        {\n          event: 'go-to-start',\n          description: 'Go back to the starting cell',\n        },\n\n      ],\n      players: {\n        '0': { position: 0 },\n        '1': { position: 0 },\n      },\n    },\n  }),\n\n  // Define the turn order for the game.\n\n\n    // Define the moves for rolling the dice and updating the game state.\n    moves: {\n      tempRoll: ({G,ctx}, id) => {\n        const die1 = Math.floor(Math.random() * 6) + 1\n        const die2 = Math.floor(Math.random() * 6) + 1\n        let moveDist = die1 + die2;\n        document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.visibility = \"hidden\"\n        document.getElementById(\"A_pair_of_strange_dice_lay_bef\").setAttribute(\"disabled\", \"True\")\n\n        document.getElementById(\"DiceButton\").style.visibility = \"hidden\"\n        document.getElementById(\"DiceButton\").setAttribute(\"disabled\", \"True\")\n\n        document.getElementById(\"NoPath_-_Copy_8\").style.visibility = \"hidden\"\n        document.getElementById(\"A_pair_of_strange_dice_lay_bef\").style.top = \"20%\"\n\n        let showConfirmButton = document.createElement(`button`)\n        showConfirmButton.setAttribute(\"class\", \"inGameButton\")\n        showConfirmButton.setAttribute(\"id\", \"confirmButton\")\n        showConfirmButton.addEventListener(\"click\", setEvent)\n        showConfirmButton.innerHTML = \"Confirm\"\n\n        let showRollVal = document.createElement(\"span\")\n        showRollVal.setAttribute(\"class\", \"inGameText\")\n        showRollVal.setAttribute(\"id\", \"rollVal\")\n        showRollVal.innerHTML = \"Player 1 rolled \" + moveDist + \"!\"\n\n        let testDiv = document.createElement(\"div\")\n        testDiv.setAttribute(\"class\", \"tempDiv\")\n        testDiv.setAttribute(\"id\", \"temp\")\n\n        testDiv.appendChild(showRollVal)\n        testDiv.appendChild(showConfirmButton)\n        document.getElementById(\"eventScreen\").append(testDiv)\n      },\n      rollDie: ({G, random, ctx}, id) => {\n        //rolling dice\n        const die1 = Math.floor(Math.random() * 6) + 1\n        const die2 = Math.floor(Math.random() * 6) + 1\n        let moveDist = die1 + die2;\n\n        //moveing players in array\n        G.cells[G.upwards.players[ctx.currentPlayer].position] = null;\n\n        // Check if the player lands on an event cell\n        const eventCell = G.upwards.board[G.upwards.players[ctx.currentPlayer].position + moveDist];\n        if (eventCell.event === 'advance') {\n          moveDist += eventCell.steps;\n        } else if (eventCell.event === 'reverse') {\n          moveDist = -moveDist;\n        } else if (eventCell.event === 'win') {\n          // End the game if a player has won.\n          ctx.events.endGame({ winner: ctx.currentPlayer });\n          return;\n        } else if (eventCell.event === 'go-to-start') {\n          moveDist = -G.upwards.players[ctx.currentPlayer].position;\n        }\n\n        G.upwards.players[ctx.currentPlayer].position += moveDist;\n        G.cells[G.upwards.players[ctx.currentPlayer].position] = id;\n      },\n\n      guessNumberEvent: ({G, random, ctx}, id) => {\n        // Generate a random number between 1 and 10\n        const randomNumber = random.Die(10).roll();\n\n        // player inputs number\n        const playerNumber = prompt(\"Enter a number between 1 and 10\");\n\n        // Compare the player's number to the random number\n        if (playerNumber === null) {\n          // The player clicked Cancel, so do nothing\n          return;\n        } else if (isNaN(playerNumber) || playerNumber < 1 || playerNumber > 10) {\n          // The player entered an invalid number, so end their turn\n          alert(\"Invalid input. Please enter a number between 1 and 10.\");\n          ctx.events.endTurn();\n          return;\n        } else if (playerNumber == randomNumber) {\n          // The player guessed correctly, so advance their position by 2\n          G.upwards.players[ctx.currentPlayer].position += 2;\n        } else {\n          // The player guessed incorrectly, so move their position back by 1\n          G.upwards.players[ctx.currentPlayer].position -= 1;\n        }\n\n        // Update the cell array to reflect the player's new position\n        G.cells[G.upwards.players[ctx.currentPlayer].position] = id;\n\n        // End the player's turn\n        ctx.events.endTurn();\n      },\n\n    },\n  turn: {\n    order: TurnOrder.ONCE,\n    minMoves: 1,\n    maxMoves: 1,\n  },\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}