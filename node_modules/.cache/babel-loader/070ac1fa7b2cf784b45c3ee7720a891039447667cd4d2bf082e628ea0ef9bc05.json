{"ast":null,"code":"import { t as Setup, E as Enhance, a as GetAPIs, q as FlushAndValidate } from './turn-order-8cc4909b.js';\nimport { P as ProcessGameConfig } from './reducer-24ea3e4c.js';\n\n/*\r\n * Copyright 2020 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\n/**\r\n * Creates the initial game state.\r\n */\nfunction InitializeGame(_ref) {\n  let {\n    game,\n    numPlayers,\n    setupData\n  } = _ref;\n  game = ProcessGameConfig(game);\n  if (!numPlayers) {\n    numPlayers = 2;\n  }\n  const ctx = game.flow.ctx(numPlayers);\n  let state = {\n    // User managed state.\n    G: {},\n    // Framework managed state.\n    ctx,\n    // Plugin related state.\n    plugins: {}\n  };\n  // Run plugins over initial state.\n  state = Setup(state, {\n    game\n  });\n  state = Enhance(state, {\n    game,\n    playerID: undefined\n  });\n  const pluginAPIs = GetAPIs(state);\n  state.G = game.setup({\n    ...pluginAPIs,\n    ctx: state.ctx\n  }, setupData);\n  let initial = {\n    ...state,\n    // List of {G, ctx} pairs that can be undone.\n    _undo: [],\n    // List of {G, ctx} pairs that can be redone.\n    _redo: [],\n    // A monotonically non-decreasing ID to ensure that\n    // state updates are only allowed from clients that\n    // are at the same version that the server.\n    _stateID: 0\n  };\n  initial = game.flow.init(initial);\n  [initial] = FlushAndValidate(initial, {\n    game\n  });\n  // Initialize undo stack.\n  if (!game.disableUndo) {\n    initial._undo = [{\n      G: initial.G,\n      ctx: initial.ctx,\n      plugins: initial.plugins\n    }];\n  }\n  return initial;\n}\nexport { InitializeGame as I };","map":{"version":3,"names":["t","Setup","E","Enhance","a","GetAPIs","q","FlushAndValidate","P","ProcessGameConfig","InitializeGame","_ref","game","numPlayers","setupData","ctx","flow","state","G","plugins","playerID","undefined","pluginAPIs","setup","initial","_undo","_redo","_stateID","init","disableUndo","I"],"sources":["/Users/aaron/Desktop/School/488_CMPSC/GUI-based-Web-Game-with-Cloud-Native-Infrastructure-Backend 3-21 copy/upwardmobility/node_modules/boardgame.io/dist/esm/initialize-7316768f.js"],"sourcesContent":["import { t as Setup, E as Enhance, a as GetAPIs, q as FlushAndValidate } from './turn-order-8cc4909b.js';\nimport { P as ProcessGameConfig } from './reducer-24ea3e4c.js';\n\n/*\r\n * Copyright 2020 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Creates the initial game state.\r\n */\r\nfunction InitializeGame({ game, numPlayers, setupData, }) {\r\n    game = ProcessGameConfig(game);\r\n    if (!numPlayers) {\r\n        numPlayers = 2;\r\n    }\r\n    const ctx = game.flow.ctx(numPlayers);\r\n    let state = {\r\n        // User managed state.\r\n        G: {},\r\n        // Framework managed state.\r\n        ctx,\r\n        // Plugin related state.\r\n        plugins: {},\r\n    };\r\n    // Run plugins over initial state.\r\n    state = Setup(state, { game });\r\n    state = Enhance(state, { game, playerID: undefined });\r\n    const pluginAPIs = GetAPIs(state);\r\n    state.G = game.setup({ ...pluginAPIs, ctx: state.ctx }, setupData);\r\n    let initial = {\r\n        ...state,\r\n        // List of {G, ctx} pairs that can be undone.\r\n        _undo: [],\r\n        // List of {G, ctx} pairs that can be redone.\r\n        _redo: [],\r\n        // A monotonically non-decreasing ID to ensure that\r\n        // state updates are only allowed from clients that\r\n        // are at the same version that the server.\r\n        _stateID: 0,\r\n    };\r\n    initial = game.flow.init(initial);\r\n    [initial] = FlushAndValidate(initial, { game });\r\n    // Initialize undo stack.\r\n    if (!game.disableUndo) {\r\n        initial._undo = [\r\n            {\r\n                G: initial.G,\r\n                ctx: initial.ctx,\r\n                plugins: initial.plugins,\r\n            },\r\n        ];\r\n    }\r\n    return initial;\r\n}\n\nexport { InitializeGame as I };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,gBAAgB,QAAQ,0BAA0B;AACxG,SAASC,CAAC,IAAIC,iBAAiB,QAAQ,uBAAuB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAAAC,IAAA,EAAmC;EAAA,IAAlC;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACpDC,IAAI,GAAGH,iBAAiB,CAACG,IAAI,CAAC;EAC9B,IAAI,CAACC,UAAU,EAAE;IACbA,UAAU,GAAG,CAAC;EAClB;EACA,MAAME,GAAG,GAAGH,IAAI,CAACI,IAAI,CAACD,GAAG,CAACF,UAAU,CAAC;EACrC,IAAII,KAAK,GAAG;IACR;IACAC,CAAC,EAAE,CAAC,CAAC;IACL;IACAH,GAAG;IACH;IACAI,OAAO,EAAE,CAAC;EACd,CAAC;EACD;EACAF,KAAK,GAAGhB,KAAK,CAACgB,KAAK,EAAE;IAAEL;EAAK,CAAC,CAAC;EAC9BK,KAAK,GAAGd,OAAO,CAACc,KAAK,EAAE;IAAEL,IAAI;IAAEQ,QAAQ,EAAEC;EAAU,CAAC,CAAC;EACrD,MAAMC,UAAU,GAAGjB,OAAO,CAACY,KAAK,CAAC;EACjCA,KAAK,CAACC,CAAC,GAAGN,IAAI,CAACW,KAAK,CAAC;IAAE,GAAGD,UAAU;IAAEP,GAAG,EAAEE,KAAK,CAACF;EAAI,CAAC,EAAED,SAAS,CAAC;EAClE,IAAIU,OAAO,GAAG;IACV,GAAGP,KAAK;IACR;IACAQ,KAAK,EAAE,EAAE;IACT;IACAC,KAAK,EAAE,EAAE;IACT;IACA;IACA;IACAC,QAAQ,EAAE;EACd,CAAC;EACDH,OAAO,GAAGZ,IAAI,CAACI,IAAI,CAACY,IAAI,CAACJ,OAAO,CAAC;EACjC,CAACA,OAAO,CAAC,GAAGjB,gBAAgB,CAACiB,OAAO,EAAE;IAAEZ;EAAK,CAAC,CAAC;EAC/C;EACA,IAAI,CAACA,IAAI,CAACiB,WAAW,EAAE;IACnBL,OAAO,CAACC,KAAK,GAAG,CACZ;MACIP,CAAC,EAAEM,OAAO,CAACN,CAAC;MACZH,GAAG,EAAES,OAAO,CAACT,GAAG;MAChBI,OAAO,EAAEK,OAAO,CAACL;IACrB,CAAC,CACJ;EACL;EACA,OAAOK,OAAO;AAClB;AAEA,SAASd,cAAc,IAAIoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}